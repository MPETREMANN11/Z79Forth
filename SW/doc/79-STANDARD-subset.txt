Implementation status with respect to the 79-STANDARD specification.

The official document pertaining to the 79-STANDARD can be dowloaded from
https://www.complang.tuwien.ac.at/forth/fth79std/FORTH-79.TXT

0. Important Restrictions
-------------------------
79-STANDARD specifies that BASE should accept values between 2 and 70
inclusively. This implementation can be compiled to be case insensitive (and
it is by default). Therefore valid values have been restricted to those
accepted by the ANSI standard (i.e. {2..36}).

User variables have no special status in Z79Forth, as it is not multitasking.

'COMPILE', as specified by 79-STANDARD, implies a threaded implementation
in which each newly compiled word will add exactly two bytes to the parameter
field. Z79Forth is a native Forth, it has no parameter field whatsoever and
the payload for each newly compiled word is actually 3 bytes. If this
particular implementation aspect is deemed to be a problem, the dictionary
can be configured to omit 'COMPILE' by setting STRCT79 to 1 at compilation
time (see constants.asm).

1. Required Word Set
--------------------

1.1 Nucleus Words
-----------------

1.1.1 Implemented
-----------------
! * */ */MOD + +! - / /MOD 0< 0= 0> 1+ 1- 2+ 2- < = > >R ?DUP @ ABS AND C! C@
CMOVE D+ DEPTH DNEGATE DROP DUP EXECUTE EXIT FILL I J LEAVE MAX MIN MOD MOVE
NEGATE NOT OR OVER PICK R> R@ ROLL ROT SWAP U< XOR

1.1.2 Not Implemented
---------------------
U* U/

1.2 Interpreter Words
---------------------

1.2.1 Implemented
-----------------
# #> #S ( -TRAILING . <# >IN ? ABORT BLK BASE CONVERT COUNT CR DECIMAL EMIT
EXPECT FIND HERE HOLD KEY PAD QUIT SIGN SPACE SPACES TYPE U. WORD

Note: CONVERT is a strictly unsigned business.

1.2.1 Not Implemented
---------------------
' 79-STANDARD CONTEXT CURRENT FORTH QUERY

Notes:
[1] A 79-STANDARD compliant ' cannot be implemented under a native
implementation such as this one. There is no such thing as a parameter field in
Z79Forth. There is, however, a compilation address and such an address can be
retrieved by resorting to FIND.
[2] ['] is an ANSI word that is not covered by the 79-STANDARD. It is provided
as a builtin dictionary word. Its 79 equivalent is:

	: ['] FIND [COMPILE] LITERAL ; IMMEDIATE RESTRICT

1.3 Compiler Words
------------------

1.3.1 Implemented
-----------------
+LOOP , ." : ; ALLOT BEGIN COMPILE CONSTANT CREATE DO DOES> ELSE FORGET IF
IMMEDIATE LITERAL LOOP REPEAT STATE THEN UNTIL VARIABLE WHILE [ [COMPILE] ]

1.3.2 Not Implemented
---------------------
DEFINITIONS VOCABULARY

1.4 Device Words
----------------

1.4.1 Implemented
-----------------
BLOCK BUFFER EMPTY-BUFFERS LIST LOAD SAVE-BUFFERS SCR UPDATE

1.4.2 Not Implemented
---------------------
N/A

2 Extension Word Set
--------------------

2.1 Double Number Word Set
--------------------------

2.1.1 Implemented
-----------------
2! 2@ 2DROP 2DUP 2OVER 2SWAP D0= D+ D< DNEGATE

2.1.2 Not Implemented
---------------------
2CONSTANT 2ROT 2VARIABLE D- D. D.R D= DMAX DMIN DU<

Note:
D. is not offered in the EEPROM image. However, DU. can be easily defined as:

	: DU. <# #S #> TYPE ;

3 Reference Word Set
--------------------

3.1 Implemented
---------------
--> .R 1+! 2* 2/ <> <CMOVE AGAIN BL BLANKS C, COM CONTINUED DUMP END FLUSH HEX
I' INDEX INTERPRET K LAST LINE MS OCTAL PAGE SHIFT THRU U.R VLIST

3.2 Not Implemented
-------------------
!BITS ** +BLOCK -' -MATCH -TEXT /LOOP 1-! ;: ;S <BUILDS >< >MOVE>
@BITS ABORT" ASCII ASHIFT B/BUF BELL CHAIN CUR DBLOCK DPL EDITOR
ERASE FLD H. IFEND IFTRUE LINELOAD LOADS MAP0 MASK
NAND NOR NUMBER O. OFFSET OTHERWISE READ-MAP REMEMBER REWIND
ROTATE S0 SET SP@ TEXT USER WHERE \LOOP

Note:
1-! is not offered. But -! is, which surprisingly enough, not is scope of the
79-STANDARD specification.

4 FORTH-83 Words
----------------
CMOVE> RECURSE

5 1994 ANSI draft 6 Words
-------------------------
\ ['] .S CELLS CHAR [CHAR] COMPILE, INVERT KEY? NIP POSTPONE SOURCE U> TUCK
UNLOOP WITHIN WORDS

Note: KEY? U> and WITHIN return the 79-STANDARD version of true, i.e. 1.
When porting code originally designed for an ANSI environment, the ANSI true
can be implemented by simply having the following definitions:

	: 0<> IF -1 ELSE 0 THEN ;
	: KEY? KEY? 0<> ;
	: WITHIN WITHIN 0<> ;
	: U> U> 0<> ;

This can be useful when dealing with code that has "environmental dependencies."

6 GNU Forth/VolksForth Words
----------------------------
RESTRICT makes the latest defined word usable in compilation mode only.

7 SwiftForth Words
------------------
.' ( addr -- ) Common usage
Displays the name of the nearest definition before addr, and the offset
of addr from the beginning of that definition. “dot-tick”

This word will only be available if the symbolic stack dump feature has not
been disabled at compilation time (see SSDFEAT in constants.asm).

8 Additional (non-standard) Words
---------------------------------
0	( -- 0 ) a compact reference to the constant zero.
1	( -- 1 ) a compact reference to the constant one.
2	( -- 2 ) a compact reference to the constant two.
-!	( n addr -- ) substracts n from [addr] and stores the result back there.
-ROT	Equivalent to : -ROT ROT ROT ;
BYE	resets the system.
I'	returns the second item from the return stack.
J'	returns the fourth item from the return stack.
ICHECK	If the running EEPROM image was compiled with a non-zero RELFEAT
	(see constants.asm), this word will walk through the dictionary linked
	list and verify that the definition of every monitored word has not
	been altered since it was defined. Monitored words are all words
	defined by :, all constants and all CREATEd words to which MONITOR has
	been applied. Note that you can, conceivably monitor, a VARIABLE but it
	makes very little sense since the checksum would be computed at
	MONITOR's execution time that and every subsequent ICHECK nvokation
	would fail if that variable's value was to be changed later on.
MONITOR	If the running EEPROM image was compiled with a non-zero RELFEAT
	(see constants.asm), this will compute the value of a byte checksum
	and store it into the latest defined word's header. This works
	similarly to the IMMEDIATE and RESTRICT words, in that it only applies
	to the last defined word and will set a flag in that word's header.
NCLR	resets the data stack.
RCLR	resets the return stack.
S	returns the contents of the system stack pointer (S).
UNLESS	Perl inspired. Functionally equivalent to:
	: UNLESS COMPILE 0= [COMPILE] IF ; IMMEDIATE RESTRICT

